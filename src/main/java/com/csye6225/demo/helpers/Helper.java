/**
 * Amitha_Murali, 001643826, murali.a@husky.neu.edu
 * Jyoti Sharma, 001643410, sharma.j@husky.neu.edu
 * Surabhi Patil, 001251860, patil.sur@husky.neu.edu
 **/

package com.csye6225.demo.helpers;

import com.csye6225.demo.dao.FileAttachmentRepository;
import com.csye6225.demo.dao.UserRepository;
import com.csye6225.demo.entities.FileAttachment;
import com.csye6225.demo.entities.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.Base64;

@Service
public class Helper {

    @Autowired
    private BCryptPasswordEncoder bCryptPasswordEncoder;

    @Autowired
    // This means to get the bean called userRepository which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @Autowired
    private FileAttachmentRepository fileAttachmentRepository;


    public User validateUserEmail(String email)
    {
        for(User user:userRepository.findAll())
        {
            if(user.getEmail().equals(email))
                return user;

        }
        return null;
    }



    public User validateUser(String email, String password)
    {
        for(User user:userRepository.findAll())
        {
            if((user.getEmail().equals(email)) && (bCryptPasswordEncoder.matches(password,user.getPassword())|| user.getPassword().equals(password)) )
                return user;

        }
        return null;
    }

    public ArrayList<String> getFileList(String taskId){
        ArrayList<String> fileList = new ArrayList<>();
        for (FileAttachment file : fileAttachmentRepository.findAll()) {
            if(file.getTaskId().equals(taskId)){
                fileList.add( file.getPath() );
            }

        }
        return fileList;
    }

    public ArrayList<String> getFileIDs(String taskId){
        ArrayList<String> fileList = new ArrayList<>();
        for (FileAttachment file : fileAttachmentRepository.findAll()) {
            if(file.getTaskId().equals(taskId)){
                fileList.add( file.getId() );
            }

        }
        return fileList;
    }

    public int GetUserDetails(String header) {
        //This is the logic to fetch user password from the authorization header value by removing "Basic" keyword, decoding and splitting with :

        if (header != null && header.contains("Basic")) {
            assert header.substring(0, 6).equals("Basic");
            String basicAuthEncoded = header.substring(6);
            String basicAuthAsString = new String(Base64.getDecoder().decode(basicAuthEncoded.getBytes()));


            final String[] credentialValues = basicAuthAsString.split(":", 2);
            //If user exists in DB , return the user object.
            User user = validateUser(credentialValues[0], credentialValues[1]);
            if(user != null) {
                return user.getId();
            }
        }

        return -1;


    }


}
